name: Build and Push Fineract Fiter Distribution

on:
  push:
    branches:
      - sf/ecr-upload
jobs:
  build-push-ecr-image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: eu-west-2
      ECR_REPOSITORY: fineract
      AWS_ROLE_ARN: arn:aws:iam::719005871086:role/github-actions-role
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: "21"
          distribution: "zulu"
          cache: gradle

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: distribution_deploy
          aws-region: ${{ env.AWS_REGION }}

      - id: commit
        uses: pr-mpt/actions-commit-hash@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repository if it doesn't exist
        id: create-ecr-repository
        uses: aws-actions/amazon-ecr-repository@v1
        with:
          repository-name: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          ./gradlew --no-daemon --console=plain :fineract-provider:clean :fineract-provider:build :fineract-provider:jibDockerBuild -x test -x cucumber
          docker tag fineract:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
